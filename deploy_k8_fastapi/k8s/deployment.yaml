apiVersion: apps/v1
kind: Deployment
metadata:
  name: densenet-api
  namespace: densenet-serving
  labels:
    app: densenet-api
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: densenet-api
  template:
    metadata:
      labels:
        app: densenet-api
        version: v1
    spec:
      containers:
      - name: densenet-api
        image: densenet-inference:latest
        imagePullPolicy: Never  # Use local image to avoid pull issues
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        env:
        - name: MODEL_VARIANT
          valueFrom:
            configMapKeyRef:
              name: densenet-config
              key: MODEL_NAME
        - name: BATCH_SIZE_LIMIT
          valueFrom:
            configMapKeyRef:
              name: densenet-config
              key: BATCH_SIZE_LIMIT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: densenet-config
              key: LOG_LEVEL
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: CUDA_VISIBLE_DEVICES
          value: ""  # CPU only for now
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: model-cache
          mountPath: /root/.cache
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: model-cache
        emptyDir:
          sizeLimit: 2Gi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: false
        fsGroup: 1000